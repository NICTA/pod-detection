input {
    file {
        type => "asgard"
        path => "/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/log/test.log"
        debug => true
        start_position => "beginning"
    }
    file {
        type => "postcon"
        path => "/Users/cli/Dev/NICTA/ProcessOrientedDependability/ext/target/log/assertion-evaluation"
        debug => true
    }
}

filter {
    grok {
        type => "postcon"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{POSTCON}"]
        add_tag => ["%{taskid}", "%{steppostcon}"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{ASGARDBG}"]
        add_tag => ["asgardbg"]
    }
    grep {
        type => "asgard"
        match => ["@tags", "asgardbg"]
        negate  => true
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{ASGARDPUSH}"]
        add_tag => ["push", "%{asgid}"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{PUSHSTEP4}"]
        add_tag => ["pushstep4"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{PUSHSTEP5}"]
        add_tag => ["pushstep5"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{PUSHSTEP6}"]
        add_tag => ["pushstep6"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{PUSHSTEP7}"]
        add_tag => ["pushstep7"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{PUSHSTEP8}"]
        add_tag => ["pushstep8"]
    }
    grok {
        type => "asgard"
        patterns_dir => ["/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/pod-config/patterns"]
        pattern => ["%{COMPLETE}"]
        add_tag => ["complete"]
    }
    multiline {
        type => "asgard"
        pattern => "(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)|(Message: Read timed out)"
        what => "previous"
    }
    grep {
        type => "asgard"
        match => ["@tags", "multiline"]
        negate  => true
    }
    grep {
        type => "asgard"
        remove_tag => ["_grokparsefailure"]
    }
    grep {
        type => "postcon"
        remove_tag => ["_grokparsefailure"]
    }
}

output {
    exec {
        type => "asgard"
        tags => "pushstep5"
        command => "curl http://localhost:8000/rollingupgrade/%{asgid}/%{amiid}/step5"
    }
    exec {
        type => "asgard"
        tags => "pushstep6"
        command => "curl http://localhost:8000/rollingupgrade/%{asgid}/%{amiid}/step6"
    }
    exec {
        type => "asgard"
        tags => "pushstep7"
        command => "curl http://localhost:8000/rollingupgrade/%{asgid}/%{amiid}/step7"
    }
    exec {
        type => "asgard"
        tags => "pushstep8"
        command => "curl http://localhost:8000/rollingupgrade/%{asgid}/%{amiid}/step8"
    }
    exec {
        type => "asgard"
        tags => "pushstep7"
        command => "curl http://localhost:8000/rollingupgrade/%{asgid}/%{amiid}/7/high"
    }
    file {
        type => "postcon"
        path => "/Users/cli/Dev/NICTA/ProcessOrientedDependability/logstash/log/postcon.log"
    }
    stdout {

    }
}
